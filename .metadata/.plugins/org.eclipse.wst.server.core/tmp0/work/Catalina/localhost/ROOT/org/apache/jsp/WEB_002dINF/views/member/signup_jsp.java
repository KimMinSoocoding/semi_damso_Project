/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2023-04-26 02:58:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/membersingup.css\" rel=\"stylesheet\">\n");
      out.write("<link href=\"//netdna.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\" integrity=\"sha512-1ycn6IcaQQ40/MKBW2W4Rhis/DbILU74C1vSrLJxCq57o941Ym01SwNsOMqvEBFlcgUa6xLiPY/NS5R+E6ztJQ==\" crossorigin=\"anonymous\" referrerpolicy=\"no-referrer\" />\n");
      out.write("<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js\"></script>\n");
      out.write("<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("	.final_pw_ck{\n");
      out.write("		display: none;\n");
      out.write("	}\n");
      out.write("	.final_pwck_ck{\n");
      out.write("		display: none;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.pwck_input_re_1{\n");
      out.write("		color : green;\n");
      out.write("		display : none;\n");
      out.write("	}\n");
      out.write("	.pwck_input_re_2{\n");
      out.write("		color : red;\n");
      out.write("		display : none;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.idCheck3{\n");
      out.write("	color: #abbcae;\n");
      out.write("	display: none;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.idCheck4{\n");
      out.write("		color: red;\n");
      out.write("		display: none;\n");
      out.write("	}\n");
      out.write("	.form-group i{\n");
      out.write("		color : #abbcae;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"container\">\n");
      out.write("      <div class=\"row\">\n");
      out.write("       <div class=\"col-md-4 block text-center mt-4 login_logo\">\n");
      out.write("        </div>\n");
      out.write("        <div class=\"col-md-4 login-form login-container\">\n");
      out.write("          <form class=\"login-detail\" id=\"loginform\" method=\"post\">\n");
      out.write("            <h3><img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/logo_text.png\" alt=\"\"></h3>\n");
      out.write("            <div class=\"form-group\">\n");
      out.write("            	 <i class=\"far fa-envelope\"></i>\n");
      out.write("             	 <input type=\"text\" class=\"form-control mail_input\" id=\"email\" name=\"email\" placeholder=\"이메일 주소\">\n");
      out.write("	             <span class=\"idCheck1\">사용 가능한 이메일입니다.</span>\n");
      out.write("	             <span class=\"idCheck2\">가입한 이메일이 이미 존재합니다 </span>\n");
      out.write("	             <span class=\"mail_warn\"></span>\n");
      out.write("            </div>\n");
      out.write("            \n");
      out.write("            <div class=\"mail_check_wrap\">\n");
      out.write("              <div class=\"mail_check_input_box\" id=\"mail_check_input_box_false\">\n");
      out.write("             	 <input class=\"form-control mail_check_input\" id=\"mail_check\" name=\"mail_check\" placeholder=\"인증번호\" disabled=\"disabled\">\n");
      out.write("              </div>\n");
      out.write("              <div class=\"mail_check_button\">\n");
      out.write("              	<button type=\"button\" class=\"email_inset_box\">이메일 인증번호 전송</button>\n");
      out.write("              </div>\n");
      out.write("              <div class=\"clearfix\"></div>\n");
      out.write("              <span id=\"mail_check_input_box_warn\"></span>\n");
      out.write("            </div> \n");
      out.write("            \n");
      out.write("            <div class=\"form-group name_wrap\">\n");
      out.write("              <i class=\"far fa-smile-wink\"></i>\n");
      out.write("              <input type=\"text\" class=\"form-control name_input\" id=\"name\" name=\"name\" placeholder=\"사용자 이름\">\n");
      out.write("			</div>\n");
      out.write("            <div class=\"form-group id_wrap\">\n");
      out.write("              <i class=\"far fa-smile\"></i>\n");
      out.write("              <input type=\"text\" class=\"form-control id_input\" id=\"id\" name=\"id\" placeholder=\"사용자 닉네임\">\n");
      out.write("              <span class=\"idCheck3\">사용 가능한 닉네임입니다.</span>\n");
      out.write("	          <span class=\"idCheck4\">가입한 닉네임이 이미 존재합니다 </span>\n");
      out.write("			</div>\n");
      out.write("            <div class=\"form-group pw_wrap\">\n");
      out.write("              <i class=\"far fa-kiss-beam\"></i>\n");
      out.write("              <input type=\"password\" class=\"form-control pw_input\" id=\"pw\" name=\"pw\" placeholder=\"비밀번호\">\n");
      out.write("              <span class=\"final_pw_ck\">비밀번호를 입력해주세요</span>\n");
      out.write("			</div>\n");
      out.write("            <div class=\"form-group pw_wrap\">\n");
      out.write("              <i class=\"fas fa-laugh-wink\"></i>\n");
      out.write("              <input type=\"password\" class=\"form-control pwck_input\" id=\"pwchk\" name=\"pwchk\" placeholder=\"비밀번호 확인\">\n");
      out.write("              <span class=\"final_pwck_ck\">비밀번호 확인란을 입력해주세요</span>\n");
      out.write("              <span class=\"pwck_input_re_1\">비밀번호가 일치합니다.</span>\n");
      out.write("              <span class=\"pwck_input_re_2\">비밀번호가 일치하지 않습니다.</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"form-group forget-password text-center\">\n");
      out.write("				<a href=\"#\">고객님의 소중한 정보를 담소에 담아주세요 !</a>\n");
      out.write("			</div>\n");
      out.write("            <div class=\"form-group\">\n");
      out.write("              <button  id=\"loginBtn\" class=\"btn btn-lg btn-block bt-sign\">가입하기</button>\n");
      out.write("            </div>\n");
      out.write("            </form>\n");
      out.write("            <div class=\"form-group bt-signup\">\n");
      out.write("              <p>계정이 있으신가요?</p>\n");
      out.write("              <button type=\"button\" onclick=\"location.href=('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/member/login');\" class=\"btn btn-sm btn-block bt-login\" id=\"register\">로그인</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("      </div>\n");
      out.write("   </div>\n");
      out.write("<script>\n");
      out.write("	var code=\"\"; // 이메일전송 인증번호 저장 코드\n");
      out.write("	var cp = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("	// 유효성 검사 \n");
      out.write("	var mailCheck = false;\n");
      out.write("	var mailnumCheck = false; \n");
      out.write("	\n");
      out.write("  // 회원가입\n");
      out.write("  $('.bt-sign').click(function(e){\n");
      out.write("  	var email = $('#email').val();\n");
      out.write("  	var id = $('#id').val();\n");
      out.write("  	var name = $('#name').val();\n");
      out.write("  	var pw = $('#pw').val();\n");
      out.write("  	var pwck = $('#pwchk').val();\n");
      out.write("  	var mail_check = $('#mail_check').val();\n");
      out.write("\n");
      out.write("	  e.preventDefault();\n");
      out.write("	  if(email == \"\"){\n");
      out.write("		  alert(\"이메일을 입력해주세요\");\n");
      out.write("		  $(\"#email\").focus();\n");
      out.write("		return;\n");
      out.write("	  }else if(id == \"\"){\n");
      out.write("		  alert(\"아이디를 입력해주세요\");\n");
      out.write("		  $(\"#id\").focus();\n");
      out.write("			return;\n");
      out.write("	  }else if(pw == \"\"){\n");
      out.write("		  alert(\"비밀번호를 입력해주세요\")\n");
      out.write("		  $(\"#pw\").focus();\n");
      out.write("		  return\n");
      out.write("	  }else if(name == \"\"){\n");
      out.write("		  alert(\"이름을 입력해주세요\")\n");
      out.write("		  $(\"#name\").focus();\n");
      out.write("		  return\n");
      out.write("	  }\n");
      out.write("	  else if (pw.length < 8) {\n");
      out.write("		  alert(\"비밀번호는 8자 이상이어야 합니다.\");\n");
      out.write("		  return \n");
      out.write("	  }else if(pwck == \"\"){\n");
      out.write("		  alert(\"비밀번호 확인을 입력해주세요\")\n");
      out.write("		  $(\"#name\").focus();\n");
      out.write("		  return\n");
      out.write("	  }else if(mail_check == \"\"){\n");
      out.write("		  alert(\"인증번호를 입력해주세요\");\n");
      out.write("		  return \n");
      out.write("	  }/* else if (emailchk !== emailInput.value) {\n");
      out.write("		  alert(\"인증번호를 보낸 이메일 주소와 입력한 이메일 주소가 일치하지 않습니다.\");\n");
      out.write("		  return false;\n");
      out.write("	  } */\n");
      out.write("	  else {\n");
      out.write("		  alert(\"회원가입을 축하합니다!\")\n");
      out.write("		  $('#loginform').submit();\n");
      out.write("	  }\n");
      out.write("  })	\n");
      out.write("  // 이메일 중복검사 \n");
      out.write("  $('#email').on(\"propertychange change keyup paste input\", function(){\n");
      out.write("	  var email = $('#email').val();\n");
      out.write("	  var data = {email : email};\n");
      out.write("	  	\n");
      out.write("		$.ajax({\n");
      out.write("			type : \"post\",\n");
      out.write("			url : cp + \"/member/memberIdChk\",\n");
      out.write("			data : data,\n");
      out.write("			success : function(result){\n");
      out.write("				if(result != 'fail'){\n");
      out.write("					$('.idCheck1').css(\"display\", \"inline-block\");\n");
      out.write("					$('.idCheck2').css(\"display\", \"none\");\n");
      out.write("					$('#loginBtn').prop(\"disabled\", false);\n");
      out.write("					$('.email_inset_box').prop(\"disabled\", false);\n");
      out.write("					$('.email_inset_box').css(\"background-color\", \"white\");\n");
      out.write("				}else {\n");
      out.write("					$('.idCheck2').css(\"display\", \"inline-block\");\n");
      out.write("					$('.idCheck1').css(\"display\", \"none\");\n");
      out.write("					$('#loginBtn').prop(\"disabled\", true);\n");
      out.write("					$('.email_inset_box').prop(\"disabled\", true);\n");
      out.write("					$('.email_inset_box').css(\"background-color\", \"gray\");\n");
      out.write("				}\n");
      out.write("			}\n");
      out.write("		}); \n");
      out.write("  }); // email check end\n");
      out.write("  \n");
      out.write("  // 닉네임 중복검사 \n");
      out.write("  $('.id_input').on(\"propertychange change keyup paste input\", function(){\n");
      out.write("	  var id = $('#id').val();\n");
      out.write("	  var data = {id : id};\n");
      out.write("		\n");
      out.write("		$.ajax({\n");
      out.write("			type : \"post\",\n");
      out.write("			url : cp + \"/member/memberNickdChk\",\n");
      out.write("			data : data,\n");
      out.write("			success : function(result){\n");
      out.write("				if(result != 'fail'){\n");
      out.write("					$('.idCheck3').css(\"display\", \"inline-block\");\n");
      out.write("					$('.idCheck4').css(\"display\", \"none\");\n");
      out.write("					$('#loginBtn').prop(\"disabled\", false); \n");
      out.write("				}else {\n");
      out.write("					$('.idCheck4').css(\"display\", \"inline-block\");\n");
      out.write("					$('.idCheck3').css(\"display\", \"none\");\n");
      out.write("					$('#loginBtn').prop(\"disabled\", true);\n");
      out.write("				}\n");
      out.write("			}\n");
      out.write("		}); \n");
      out.write("  }); // email check end\n");
      out.write("  \n");
      out.write("  // 비밀번호 확인란 중복검사\n");
      out.write("  $('.pwck_input').on(\"propertychange change keyup paste input\", function(){\n");
      out.write("	 	var pw = $('.pw_input').val();\n");
      out.write("	 	var pwck = $('.pwck_input').val();\n");
      out.write("	 	$('.final_pwck_ck').css('display', 'none');\n");
      out.write("	 	\n");
      out.write("	 	if(pw == pwck){\n");
      out.write("			$('.pwck_input_re_1').css(\"display\", \"block\");\n");
      out.write("			$('.pwck_input_re_2').css(\"display\", \"none\");\n");
      out.write("			$('#loginBtn').prop(\"disabled\", false); \n");
      out.write("		}else {\n");
      out.write("			$('.pwck_input_re_1').css(\"display\", \"none\");\n");
      out.write("			$('.pwck_input_re_2').css(\"display\", \"block\");\n");
      out.write("			$('#loginBtn').prop(\"disabled\", true);\n");
      out.write("		}\n");
      out.write("  }) // pw check end \n");
      out.write("  \n");
      out.write("  \n");
      out.write("  // 이메일 인증번호 전송\n");
      out.write("  $(\".mail_check_button\").click(function(){\n");
      out.write("	  var email = $(\".mail_input\").val(); // 작성한 이메일\n");
      out.write("	  var checkBox = $(\".mail_check_input\"); // 인증번호 입력란\n");
      out.write("	  var boxWrap = $(\".mail_check_input_box\"); // 인증번호 입력박스 \n");
      out.write("	  var warnMsg = $(\".mail_warn\"); // 이메일 유효성검사 경고\n");
      out.write("	  \n");
      out.write("	  if($('.email_inset_box').prop(\"disabled\") == true){\n");
      out.write("		  alert(\"가입한 이메일이 존재합니다\")\n");
      out.write("		  return false;\n");
      out.write("	  }\n");
      out.write("	  \n");
      out.write("	  /* 이메일 형식 유효성 검사 */\n");
      out.write("	    if(mailFormCheck(email)){\n");
      out.write("	        warnMsg.html(\"이메일이 전송 되었습니다. 이메일을 확인해주세요.\");\n");
      out.write("	        warnMsg.css(\"display\", \"inline-block\");\n");
      out.write("	        $('#email_inset_box').prop(\"disabled\", false); \n");
      out.write("	    } else {\n");
      out.write("	        warnMsg.html(\"올바르지 못한 이메일 형식입니다.\");\n");
      out.write("	        warnMsg.css(\"display\", \"inline-block\");\n");
      out.write("	        $('#email_inset_box').prop(\"disabled\", true);\n");
      out.write("	        return false;\n");
      out.write("	    }  \n");
      out.write("	  \n");
      out.write("	  $.ajax({\n");
      out.write("		  type:\"GET\",\n");
      out.write("		  url: \"mailCheck?email=\" + email,\n");
      out.write("		  success:function(data){\n");
      out.write("			  checkBox.attr(\"disabled\", false);\n");
      out.write("			  boxWrap.attr(\"id\", \"mail_check_input_true\");\n");
      out.write("			  code = data;\n");
      out.write("		  }\n");
      out.write("	  })\n");
      out.write("	  alert(\"인증번호를 이메일로 전송하였습니다\")\n");
      out.write("  }) \n");
      out.write("  \n");
      out.write("  // 인증번호 일치여부 \n");
      out.write("  $(\".mail_check_input\").blur(function(){\n");
      out.write("	  var inputCode = $(\".mail_check_input\").val(); //입력한 코드 \n");
      out.write("	  var checkResult = $(\"#mail_check_input_box_warn\"); // 일치여부\n");
      out.write("	  \n");
      out.write("	  if(inputCode == code){ // 성공했을때\n");
      out.write("		  checkResult.html(\"인증번호가 확인되었습니다\");\n");
      out.write("		  checkResult.attr(\"class\", \"correct\");\n");
      out.write("		  $('#loginBtn').prop(\"disabled\", false); \n");
      out.write("		  mailnumCheck = true;\n");
      out.write("	  } else if(inputCode !== code || inputCode == \"\") { // 실패시\n");
      out.write("		  checkResult.html(\"인증번호가 일치하지 않습니다 다시 확인해주세요\"); \n");
      out.write("		  checkResult.attr(\"class\", \"incorrect\");\n");
      out.write("		  $('#loginBtn').prop(\"disabled\", true);\n");
      out.write("		  mailnumCheck = false;\n");
      out.write("	  }\n");
      out.write("  })\n");
      out.write("  \n");
      out.write("  // 이메일 형식 유효성 검사 \n");
      out.write("  function mailFormCheck(email){\n");
      out.write("	  var form = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n");
      out.write("	  return form.test(email);\n");
      out.write("  }\n");
      out.write("  \n");
      out.write("</script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
