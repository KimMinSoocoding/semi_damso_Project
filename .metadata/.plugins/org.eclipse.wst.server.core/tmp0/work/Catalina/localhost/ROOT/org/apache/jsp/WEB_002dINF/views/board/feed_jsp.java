/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2023-04-26 03:04:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class feed_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1669273540242L));
    _jspx_dependants.put("jar:file:/Users/minsoo/Desktop/team/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/sns_damso/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/header.jsp", out, false);
      out.write("\n");
      out.write("<link\n");
      out.write("		href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/css/styleBoard_230407.css\"\n");
      out.write("		rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("	a {\n");
      out.write("		cursor: pointer;\n");
      out.write("	}\n");
      out.write("	.feed-main {\n");
      out.write("		display :flex;\n");
      out.write("		justify-content: center;\n");
      out.write("	}\n");
      out.write("	.myfeed {\n");
      out.write("		max-width: 620px;\n");
      out.write("	}\n");
      out.write("	.story {\n");
      out.write("		height: auto;\n");
      out.write("		display: flex;\n");
      out.write("		padding: 45px 0 20px;\n");
      out.write("		justify-content: space-around;\n");
      out.write("	}\n");
      out.write("	.myinfo {\n");
      out.write("		width: 250px;\n");
      out.write("		height: 400px;\n");
      out.write("	}\n");
      out.write("	.story-img, .media .info-img {\n");
      out.write("		width: 60px;\n");
      out.write("		height: 60px;\n");
      out.write("		border-radius: 50%;\n");
      out.write("		border: white 2px solid;\n");
      out.write("		padding: 0;\n");
      out.write("	}\n");
      out.write("	.story-active {\n");
      out.write("		width: 64px;\n");
      out.write("		height: 64px;\n");
      out.write("		border-radius: 50%;\n");
      out.write("		border: #cceabf 2px solid;\n");
      out.write("	}\n");
      out.write("	.myboard {\n");
      out.write("		width : 470px;\n");
      out.write("		margin: auto;\n");
      out.write("		padding-top: 30px;\n");
      out.write("	}\n");
      out.write("	.board-btnbox {\n");
      out.write("		margin: 0;\n");
      out.write("		padding: 10px;\n");
      out.write("	}\n");
      out.write("	.board-btnbox li {\n");
      out.write("		padding-right: 8px;\n");
      out.write("	}\n");
      out.write("	.board-btnbox li:nth-of-type(4) {\n");
      out.write("		float : right;\n");
      out.write("		padding-right: 0;\n");
      out.write("		margin-right: -23px;\n");
      out.write("	}\n");
      out.write("	.reply-view, .reply-add, .modal-reply-add {\n");
      out.write("		color: #757575;\n");
      out.write("		font-size: 15px;\n");
      out.write("	}\n");
      out.write("	.reply-view p {\n");
      out.write("		padding: 5px 0 10px;\n");
      out.write("		margin:0;\n");
      out.write("	}\n");
      out.write("	.reply-add, .modal-reply-add {\n");
      out.write("		border: none;\n");
      out.write("		width: 100%;\n");
      out.write("		margin-left: -2px;\n");
      out.write("		padding-bottom: 10px;\n");
      out.write("	}\n");
      out.write("	.feed-writer, .reply-view:hover, .feed-writer:hover {\n");
      out.write("		color: #fdb3b6;\n");
      out.write("	}\n");
      out.write("	.reply-addbtn {\n");
      out.write("		float: right;\n");
      out.write("		background-color: white;\n");
      out.write("		border: none;\n");
      out.write("		cursor: pointer;\n");
      out.write("		color: #757575;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.write-img {\n");
      out.write("		border: none !important;\n");
      out.write("		border-radius: 50%;\n");
      out.write("		width: 30px !important;\n");
      out.write("		height: 30px !important;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	textarea {\n");
      out.write("		border: none;\n");
      out.write("		width: 100%;\n");
      out.write("		height: 300px;\n");
      out.write("		padding: 10px 15px;\n");
      out.write("		resize: none;\n");
      out.write("		border-bottom: #e9ecef solid 1px;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("	.write-option {\n");
      out.write("		height: 40px;\n");
      out.write("		border-bottom: solid 1px #e9ecef;\n");
      out.write("		cursor: pointer;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.modalscroll {\n");
      out.write(" 		overflow-x: hidden; \n");
      out.write(" 		overflow-y: auto;\n");
      out.write("  		height: 412.11px;\n");
      out.write(" 	}\n");
      out.write(" 	\n");
      out.write(" 	.modalscroll::-webkit-scrollbar {\n");
      out.write("		display: none; /* Chrome, Safari, Opera*/\n");
      out.write("	}\n");
      out.write(" 	\n");
      out.write(" 	.d-flex {\n");
      out.write(" 		align-items: center;\n");
      out.write("	}\n");
      out.write("	\n");
      out.write("	.reply-content {\n");
      out.write("		margin: 0;\n");
      out.write("	}\n");
      out.write("	.text-red {\n");
      out.write("		color: red;\n");
      out.write("	}\n");
      out.write("\n");
      out.write("\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<div class=\"feed-main\">\n");
      out.write("\n");
      out.write("	<div class=\"myfeed\">\n");
      out.write("		<div class=\"story\">\n");
      out.write("			<div class=\"d-flex me-3\">\n");
      out.write("				<div class=\"story-active\">\n");
      out.write("					<a href=\"\">\n");
      out.write("						<img class=\"story-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"d-flex me-3\">\n");
      out.write("				<div class=\"story-active\">\n");
      out.write("					<a href=\"\">\n");
      out.write("						<img class=\"story-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"d-flex me-3\">\n");
      out.write("				<div class=\"story-active\">\n");
      out.write("					<a href=\"\">\n");
      out.write("						<img class=\"story-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"d-flex me-3\">\n");
      out.write("				<div class=\"story-active\">\n");
      out.write("					<a href=\"\">\n");
      out.write("						<img class=\"story-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"d-flex me-3\">\n");
      out.write("				<div class=\"story-active\">\n");
      out.write("					<a href=\"\">\n");
      out.write("						<img class=\"story-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"d-flex me-3\">\n");
      out.write("				<div class=\"story-active\">\n");
      out.write("					<a href=\"\">\n");
      out.write("						<img class=\"story-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"d-flex me-3\">\n");
      out.write("				<div class=\"story-active\">\n");
      out.write("					<a href=\"\">\n");
      out.write("						<img class=\"story-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"d-flex me-3\">\n");
      out.write("				<div class=\"story-active\">\n");
      out.write("					<a href=\"\">\n");
      out.write("						<img class=\"story-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"boards\">\n");
      out.write("\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	<div class=\"myinfo myinfo_moblie\">\n");
      out.write("		<div class=\"cardbox-header p-5 ms-3\">\n");
      out.write("			<div class=\"media\">\n");
      out.write("				<div class=\"d-flex me-3\" style=\"object-fit: cover; object-position: center\">\n");
      out.write("					<a href=\"/member/profile/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/damso\">\n");
      out.write("						<img class=\"info-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("					</a>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"media-body\">\n");
      out.write("					<p class=\"m-0\" style=\"font-weight: 600\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\n");
      out.write("					<p class=\"m-0\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</p>\n");
      out.write("					<a href=\"/member/logout\" style=\"font-size:10px;\">로그아웃</a>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write('\n');
      out.write("\n");
      out.write("<script>\n");
      out.write("	$(function () {\n");
      out.write("		jQuery.fn.serializeObject = function() {\n");
      out.write("		    var obj = null;\n");
      out.write("		    try {\n");
      out.write("		        if ( this[0].tagName && this[0].tagName.toUpperCase() == \"FORM\" ) {\n");
      out.write("		            var arr = this.serializeArray();\n");
      out.write("		            if ( arr ) {\n");
      out.write("		                obj = {};\n");
      out.write("		                jQuery.each(arr, function() {\n");
      out.write("		                    obj[this.name] = this.value;\n");
      out.write("		                });\n");
      out.write("		            }\n");
      out.write("		        }\n");
      out.write("		    }\n");
      out.write("		    catch(e) {alert(e.message);}\n");
      out.write("		    finally  {}\n");
      out.write("\n");
      out.write("		    return obj;\n");
      out.write("		};\n");
      out.write("\n");
      out.write("		var id = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\n");
      out.write("		moment.locale('ko')\n");
      out.write("		let str = \"\";\n");
      out.write("		var rno = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reply.rno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("\n");
      out.write("		boardService.getList({}, function (result) {\n");
      out.write("			console.log(result)\n");
      out.write("			for (let i in result) {\n");
      out.write("				str += getBoardLiStr(result[i])\n");
      out.write("			}\n");
      out.write("			$(\".boards\").html(str)\n");
      out.write("		});\n");
      out.write("\n");
      out.write("		// 댓글 보기\n");
      out.write("		$(\".boards\").on(\"click\", \".myboard .feed-detail\", function(replyfunction) {\n");
      out.write("			console.log($(this).data(\"id\"))\n");
      out.write("			let src = $(this).data(\"imagesrc\");\n");
      out.write("			$(\".icn-more\").css(\"color\", \"#009CFF\").css(\"cursor\", \"pointer\");\n");
      out.write("\n");
      out.write("			boardService.get($(this).data(\"bno\"), function (result) {\n");
      out.write("				console.log(result)\n");
      out.write("				$(\"#boardModal\").modal(\"show\").data(\"bno\", result.bno)\n");
      out.write("				$(\"#detailImage\").attr(\"src\", src)\n");
      out.write("				$(\"#writer\").text(result.writer)\n");
      out.write("				$(\"#content\").text(result.content)\n");
      out.write("				$(\"#regdate\").text(moment(result.regdate).startOf('day').fromNow())\n");
      out.write("				$(\"#modalFooter button\").show()\n");
      out.write("				$(\"#modalFooter button\").eq(2).hide()\n");
      out.write("				$(\"#boardModal\").modal(\"show\").data(\"bno\", result.bno)\n");
      out.write("				$(\"#boardModal form [name='bno']\").val(result.bno);\n");
      out.write("\n");
      out.write("				replyService.getList({bno:$(\"#boardModal\").modal(\"show\").data(\"bno\"), rno:rno}, function(result) {\n");
      out.write("					var str = \"\";\n");
      out.write("					for(var i in result) {\n");
      out.write("						str += getReplyLiStr(result[i]);\n");
      out.write("					}\n");
      out.write("					$(\".chat\").html(str);\n");
      out.write("				})\n");
      out.write("			})\n");
      out.write("		});\n");
      out.write("\n");
      out.write("\n");
      out.write("		$(\".boards\").on(\"click\", \".fa-heart\", function () {\n");
      out.write("			let $this = $(this);\n");
      out.write("			console.log($(this).data(\"bno\") + \" heart\")\n");
      out.write("\n");
      out.write("			if ($this.closest(\"i\").hasClass(\"fa-heart far\") || $this.closest(\"i\").hasClass(\"far fa-heart\")) {\n");
      out.write("				boardService.insertLike({bno : $(this).data(\"bno\"), id :'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'}, function (result) {\n");
      out.write("					$this.closest(\"i\").attr(\"class\", \"fas fa-heart\").css(\"color\", \"red\").closest(\"div\").find(\".likeCnt\").text(parseInt($this.closest(\"div\").find(\".likeCnt\").text()) + 1);\n");
      out.write("\n");
      out.write("					notiService.insert({type: 'like', sender : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', receiver : $this.closest(\".myboard\").find(\".feed-writer\").text(), bno : $this.data(\"bno\")}, function (result) {})\n");
      out.write("\n");
      out.write("					let msg = \"like,\" + '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' + \",\" + $this.closest(\".myboard\").find(\".feed-writer\").text() + \",\" + $this.data(\"bno\")\n");
      out.write("					aws.send(msg);\n");
      out.write("				})\n");
      out.write("			} else {\n");
      out.write("				boardService.removeLike({bno : $(this).data(\"bno\"), id :'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'}, function (result) {\n");
      out.write("					$this.closest(\"i\").attr(\"class\", \"far fa-heart\").css(\"color\", \"#757575\").closest(\"div\").find(\".likeCnt\").text(parseInt($this.closest(\"div\").find(\".likeCnt\").text()) - 1);\n");
      out.write("				})\n");
      out.write("			}\n");
      out.write("		})\n");
      out.write("\n");
      out.write("		/* 이미지 더블 클릭 시 좋아요 */\n");
      out.write("		$(\".boards\").on(\"dblclick\", \".cardbox-item\", function() {\n");
      out.write("			let $this = $(this);\n");
      out.write("			console.log($(this).closest(\".myboard\").data(\"bno\") + \" heart\")\n");
      out.write("			let imgheart = $this.parent().find(\".fa-heart\");\n");
      out.write("			console.log(imgheart)\n");
      out.write("\n");
      out.write("			if (imgheart.closest(\"i\").hasClass(\"fa-heart far\") || imgheart.closest(\"i\").hasClass(\"far fa-heart\")) {\n");
      out.write("				boardService.insertLike({bno : $(this).closest(\".myboard\").data(\"bno\"), id :'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'}, function (result) {\n");
      out.write("					imgheart.closest(\"i\").attr(\"class\", \"fas fa-heart\").css(\"color\", \"red\").closest(\"div\").find(\".likeCnt\").text(parseInt(imgheart.closest(\"div\").find(\".likeCnt\").text()) + 1);\n");
      out.write("				})\n");
      out.write("			} else {\n");
      out.write("				boardService.removeLike({bno : $(this).closest(\".myboard\").data(\"bno\"), id :'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'}, function (result) {\n");
      out.write("					imgheart.closest(\"i\").attr(\"class\", \"far fa-heart\").css(\"color\", \"#757575\").closest(\"div\").find(\".likeCnt\").text(parseInt(imgheart.closest(\"div\").find(\".likeCnt\").text()) - 1);\n");
      out.write("				})\n");
      out.write("			}\n");
      out.write("		})\n");
      out.write("\n");
      out.write("		// 수정, 삭제\n");
      out.write("		$(\".boards\").on(\"click\", '.btn-flat-icon:has(.fa-ellipsis-h)', function () {\n");
      out.write("			let $this = $(this).find(\".fa-ellipsis-h\");\n");
      out.write("			$(\"#editModal\").data(\"bno\", $this.data(\"bno\"))\n");
      out.write("\n");
      out.write("			if ($this.data(\"writer\") === '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("') {\n");
      out.write("				$(\"#editModal\").modal(\"show\")\n");
      out.write("			}\n");
      out.write("		})\n");
      out.write("\n");
      out.write("		$(\"#remove\").click(function () {\n");
      out.write("			$(\"#editModal\").modal(\"hide\")\n");
      out.write("			$(\"#removeModal\").modal(\"show\");\n");
      out.write("			$(\"#removeModal\").data(\"bno\", $(\"#editModal\").data(\"bno\"))\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("		$(\"#removeModal div:first\").click(function () {\n");
      out.write("			boardService.remove($(\"#removeModal\").data(\"bno\"), function (result) {\n");
      out.write("				$(\".boards .myboard\").each(function () {\n");
      out.write("					if ($(this).data(\"bno\") == $(\"#editModal\").data(\"bno\")) {\n");
      out.write("						$(this).remove()\n");
      out.write("					}\n");
      out.write("				})\n");
      out.write("\n");
      out.write("				$(\"#removeModal\").modal(\"hide\")\n");
      out.write("			})\n");
      out.write("		})\n");
      out.write("\n");
      out.write("		$(\"#editModal .col-12 div:last\").click(function () {\n");
      out.write("			$(\"#editModal\").modal(\"hide\")\n");
      out.write("		})\n");
      out.write("\n");
      out.write("		$(\"#removeModal div:last\").click(function () {\n");
      out.write("			$(\"#removeModal\").modal(\"hide\")\n");
      out.write("		})\n");
      out.write("\n");
      out.write(" 		$(\"#modify\").click(function () {\n");
      out.write("			$(\"#editModal\").modal(\"hide\")\n");
      out.write("			$(\"#write-modal\").modal(\"show\")\n");
      out.write("			$(\"#write-modal\").data(\"bno\", $(\"#editModal\").data(\"bno\"));\n");
      out.write("			boardService.get($(\"#editModal\").data(\"bno\"), function (data) {\n");
      out.write("				console.log(data)\n");
      out.write("				imgStr = '<img src=\"/display?name=' + data.attaches[0]['name'] + '&path=' + data.attaches[0]['path'] + '&uuid=' + data.attaches[0]['uuid'] + '&image=' + data.attaches[0]['image'] + '&thumb=on\">'\n");
      out.write("				$(\"#imgInsert\").empty().html(imgStr)\n");
      out.write("			})\n");
      out.write("			console.log($(\"#write-modal\").data(\"bno\"));\n");
      out.write("			$(\"#register\").text(\"수정하기\").addClass(\"btn-modify\");\n");
      out.write("			$(\".myboard\").each(function() {\n");
      out.write("				if($(\"#write-modal\").data(\"bno\") == $(this).data(\"bno\")) {\n");
      out.write("					$(\"#board-content\").val($(this).find(\"i\").data(\"content\"));\n");
      out.write("				}\n");
      out.write("			})\n");
      out.write(" 		});\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		$(document).on(\"click\", \"#register.btn-modify\", function () {\n");
      out.write("			console.log(\"hello\")\n");
      out.write("			boardService.modify({content : $(\"#board-content\").val(), writer : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("', bno : $(\"#write-modal\").data(\"bno\")}, function (result) {\n");
      out.write("				$(\".boards .myboard\").each(function () {\n");
      out.write("					if ($(this).data(\"bno\") == $(\"#write-modal\").data(\"bno\")) {\n");
      out.write("						$this = $(this)\n");
      out.write("						boardService.get($this.data(\"bno\"), function (data) {\n");
      out.write("							$this.replaceWith(getBoardLiStr(data))\n");
      out.write("						})\n");
      out.write("					}\n");
      out.write("				})\n");
      out.write("				$(\"#write-modal\").modal(\"hide\")\n");
      out.write("				$(\"#register.btn-modify\").removeClass(\"btn-modify\");\n");
      out.write("			})\n");
      out.write("		})\n");
      out.write("\n");
      out.write("		// 글 쓰기 str 분리\n");
      out.write("\n");
      out.write("		function getBoardLiStr(obj) {\n");
      out.write("			let hasLike = obj.likeOn;\n");
      out.write("			let like = hasLike ? 'fas\\\" style=\\\"color: red' : 'far';\n");
      out.write("\n");
      out.write("			return `\n");
      out.write("			<div class=\"myboard\" data-bno=\"${obj.bno}\">\n");
      out.write("\n");
      out.write("				<div class=\"cardbox-header py-2\">\n");
      out.write("\n");
      out.write("					<div class=\"float-end\">\n");
      out.write("						<button class=\"btn btn-flat btn-flat-icon\" type=\"button\">\n");
      out.write("							<i data-writer=\"${obj.writer}\" data-bno=\"${obj.bno}\" data-content=\"${obj.content}\" class=\"fas fa-ellipsis-h\"></i>\n");
      out.write("						</button>\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("					<div class=\"media m-0\">\n");
      out.write("						<div class=\"d-flex mr-3\">\n");
      out.write("							<a href=\"\"><img class=\"img-fluid rounded-circle\"\n");
      out.write("											src=\"../../../resources/img/attach.jpg\"\n");
      out.write("											alt=\"User\"></a>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"media-body\">\n");
      out.write("							<p class=\"m-0\">${obj.writer}</p>\n");
      out.write("							<small><span><i class=\"icon ion-md-pin\"></i>\n");
      out.write("								${obj.bno}</span></small> <small><span><i\n");
      out.write("								class=\"icon ion-md-time\"></i>${moment(obj.regdate).fromNow()}</span></small>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"cardbox-item\">\n");
      out.write("					<img class=\"img-fluid\"\n");
      out.write("						 src=\"/display?name=${obj.attaches[0]['name']}&path=${obj.attaches[0]['path']}&uuid=${obj.attaches[0]['uuid']}&image=${obj.attaches[0]['image']}&thumb=on\"\n");
      out.write("						 alt=\"Image\" style=\"width:100%; max-height:587.5px\">\n");
      out.write("				</div>\n");
      out.write("				<div class=\"cardbox-base\">\n");
      out.write("					<ul class=\"board-btnbox\">\n");
      out.write("						<li><a><i data-bno=\"${obj.bno}\" class=\"fa-heart ${like}\"></i></a></li>\n");
      out.write("						<li><a><i class=\"far fa-comment\"></i></a></li>\n");
      out.write("						<li><a><i class=\"far fa-paper-plane\"></i></a></li>\n");
      out.write("						<li><a><i data-bno=\"${obj.bno}\" class=\"far fa-bookmark\"></i></a></li>\n");
      out.write("					</ul>\n");
      out.write("					<div>\n");
      out.write("						<p style=\"margin-bottom:5px\">좋아요 <span class=\"likeCnt\">${obj.likecnt}</span>개</p>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"feed-detail\" data-bno=\"${obj.bno}\" data-imageSrc=\"/display?name=${obj.attaches[0]['name']}&path=${obj.attaches[0]['path']}&uuid=${obj.attaches[0]['uuid']}&image=${obj.attaches[0]['image']}&thumb=on\">\n");
      out.write("						<a class=\"feed-writer\">${obj.writer}</a><span class=\"board-content\" style=\"padding: 5px\">${obj.content}</span>\n");
      out.write("						<a class=\"reply-view\"><p>댓글 ${obj.replycnt}개 모두 보기</p></a>\n");
      out.write("						<input type=\"text\" class=\"reply-add\" placeholder=\"댓글 달기..\"/>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			`\n");
      out.write("		}\n");
      out.write("\n");
      out.write("		let timer;\n");
      out.write("		document.addEventListener(\"scroll\", () => {\n");
      out.write("			if (!timer) {\n");
      out.write("				timer = setTimeout(() => {\n");
      out.write("					timer = null;\n");
      out.write("					if ($(window).scrollTop() + $(window).height() > $(document).height() - 2000) {\n");
      out.write("						boardService.getList({bno : $(\".myboard:last\").data(\"bno\"), category : null}, function (result) {\n");
      out.write("							let str = \"\"\n");
      out.write("							for (let i in result) {\n");
      out.write("								str += getBoardLiStr(result[i])\n");
      out.write("							}\n");
      out.write("							$(\".boards\").append(str)\n");
      out.write("							console.log(result)\n");
      out.write("						})\n");
      out.write("					}\n");
      out.write("				}, 1000);\n");
      out.write("			}\n");
      out.write("		})\n");
      out.write("\n");
      out.write("		// 댓글 리스트 조회\n");
      out.write("		function getReplyLiStr(obj) {\n");
      out.write("			let hasLike = obj.likeOn;\n");
      out.write("			let like = hasLike ? 'fas text-red' : 'far';\n");
      out.write("			return `<li class=\"list-group-item border-0\" data-rno=\"${obj.rno}\">\n");
      out.write("			   		<div class=\"header\">\n");
      out.write("				   		<a href=\"\">\n");
      out.write("						<img class=\"write-img\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/img/attach.jpg\">\n");
      out.write("						</a>\n");
      out.write("						<strong class=\"primary-font\" data-writer=\"${obj.writer}\">&nbsp;${obj.writer}</strong>\n");
      out.write("						<small class=\"float-right text-muted\">${moment(obj.regdate).fromNow()}</small>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"d-flex\">\n");
      out.write("					<div class=\"col-9\">\n");
      out.write("					<span class=\"reply-content\" data-content=\"${obj.content}\">${obj.content}</span>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"dropdown col-2 float-left\" >\n");
      out.write("					  <a class=\"btn\" data-toggle=\"dropdown\">\n");
      out.write("						<i class=\"fas fa-ellipsis-h dropicon\" style=\"color: white\"></i>\n");
      out.write("					  </a>	\n");
      out.write("					  <div class=\"dropdown-menu\">\n");
      out.write("					    <a class=\"dropdown-item replymodify\">수정</a>\n");
      out.write("					    <a class=\"dropdown-item text-danger replydelete\">삭제</a>\n");
      out.write("					  </div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"col-2\">\n");
      out.write("					<a><i class=\"heart fa-heart ${like} \" data-rno=\"${obj.rno}\" ></i></a></div>\n");
      out.write("					</div>\n");
      out.write("					<div>\n");
      out.write("					<p style=\"margin-bottom:5px; font-size:13px\">좋아요 <span class=\"likeCnt\">${obj.likecnt}</span>개</p>\n");
      out.write("					</div>													\n");
      out.write("					</li>`;\n");
      out.write("		}\n");
      out.write("		\n");
      out.write("		\n");
      out.write("		// 더보기 버튼 클릭 이벤트\n");
      out.write("		$(\".icn-more\").click(function() {\n");
      out.write("			var rno = $(\".chat li:last\").data(\"rno\"); //last:마지막 번호\n");
      out.write("			replyService.getList({bno:$(\"#boardModal\").modal(\"show\").data(\"bno\"), rno:rno}, function(result) {\n");
      out.write("				if(!result.length) { \n");
      out.write("					$(\".icn-more\").prop(\"disabled\", true);\n");
      out.write("					$(\".icn-more\").css(\"color\", \"#757575\").css(\"cursor\", \"default\");\n");
      out.write("					return;\n");
      out.write("				}\n");
      out.write("				var str = \"\";\n");
      out.write("				for(var i in result) {\n");
      out.write("					str += getReplyLiStr(result[i]);\n");
      out.write("				}\n");
      out.write("				$(\".chat\").append(str);\n");
      out.write("			});\n");
      out.write("		})\n");
      out.write("		\n");
      out.write("		// 댓글에 마우스 hover 이벤트\n");
      out.write("		$(document).on('mouseover', '.list-group-item', function(){\n");
      out.write("			var rno = $(this).closest(\".list-group-item\").data(\"rno\");\n");
      out.write("			var writer = $(this).closest(\".list-group-item\").find(\".primary-font\").data(\"writer\");\n");
      out.write("			/* 댓글 작성자와 일치하지 않으면 ... 아이콘이 보이지 않고 클릭 금지 */\n");
      out.write("			if ('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${member.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' != writer) {\n");
      out.write("				$(this).find('.dropicon').css('color', 'white');\n");
      out.write("				$(this).find('.btn').css(\"pointer-events\", \"none\");\n");
      out.write("			/* 일치하면 ...이 보임 */\n");
      out.write("			}\n");
      out.write("			else {\n");
      out.write("				$(this).find('.dropicon').css('color', '#757575');\n");
      out.write("				$(this).find('.btn').css(\"cursor\", \"pointer\");\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("		// 본인 작성 게시글에서 마우스가 벗어나면 ...이 보이지 않게\n");
      out.write(" 		$(document).on('mouseout', '.list-group-item', function(){\n");
      out.write("		    $(this).find('.dropicon').css('color', 'white');\n");
      out.write("		});\n");
      out.write("		\n");
      out.write("	    \n");
      out.write("	    $(document.replyform).submit(function() {\n");
      out.write("			event.preventDefault();\n");
      out.write("			if(!this.content.value.length) {\n");
      out.write("				alert(\"댓글 내용을 입력해주세요.\");\n");
      out.write("				return false;\n");
      out.write("			}\n");
      out.write("			// 작성 수정 분기\n");
      out.write("			var obj = $(this).serializeObject();\n");
      out.write("			// 수정일때\n");
      out.write("			if($(this).prop(\"modify\")) {\n");
      out.write("				replyService.modify(obj, function(result) {\n");
      out.write("					// 초기화\n");
      out.write("				    $(document.replyform).prop(\"modify\", false).find(\"button\").text(\"등록\").prev().val(\"\");\n");
      out.write("			    	$(\".list-group-item\").each(function() {\n");
      out.write("						if($(this).data(\"rno\") == obj.rno) {\n");
      out.write("							var $this = $(this);\n");
      out.write("							replyService.get($this.data(\"rno\"), function(r) {\n");
      out.write("								console.log(r);\n");
      out.write("								$this.replaceWith(getReplyLiStr(r))\n");
      out.write("                            })\n");
      out.write("                        }\n");
      out.write("                    })\n");
      out.write("				});\n");
      out.write("			}\n");
      out.write("			else {\n");
      out.write("				replyService.add(obj, function(result) {\n");
      out.write("				    $(\"#modalFooter\").find(\"input[name='content']\").val(\"\");\n");
      out.write("				    // 작성한 댓글을 맨 위로 보냄\n");
      out.write("				    replyService.get(result, function(data) {\n");
      out.write("				    	$(\".chat\").prepend(getReplyLiStr(data));\n");
      out.write("				    });\n");
      out.write("				});\n");
      out.write("			}\n");
      out.write("		})\n");
      out.write("\n");
      out.write("	    $(\".chat\").on(\"click\", \".replymodify\", function() {\n");
      out.write("			var $li = $(this).closest(\"li\");\n");
      out.write("			var content = $li.find(\".reply-content\").text();\n");
      out.write("			var rno = $li.data(\"rno\");\n");
      out.write("			console.log(rno, content);\n");
      out.write("			$(document.replyform)\n");
      out.write("			.prop(\"modify\", true)\n");
      out.write("			.find(\"[name='rno']\")\n");
      out.write("			.val(rno)\n");
      out.write("			.end()\n");
      out.write("			.find(\"button\")\n");
      out.write("			.text(\"수정\")\n");
      out.write("			.prev()\n");
      out.write("			.val(content)\n");
      out.write("			.focus()\n");
      out.write("			.on(\"blur\", function() {\n");
      out.write("				$(document.replyform).prop(\"modify\", false).find(\"[name='rno']\").val(\"\").end()\n");
      out.write("				.find(\"button\").text(\"등록\").prev().val(\"\");\n");
      out.write("			});\n");
      out.write("		});\n");
      out.write("	    \n");
      out.write("	    $(\".chat\").on(\"click\", \".replydelete\", function() {\n");
      out.write("            var $listItem = $(this).closest(\".list-group-item\");\n");
      out.write("            var rno = $listItem.data(\"rno\");\n");
      out.write("            replyService.remove(rno, function(result) {\n");
      out.write("                $listItem.remove();\n");
      out.write("	        })\n");
      out.write("	    })\n");
      out.write("	    \n");
      out.write("		\n");
      out.write("     	// 댓글 좋아요\n");
      out.write("		$(\".chat\").on(\"click\", \".heart\", function () {\n");
      out.write("			let $this = $(this);\n");
      out.write("			var rno = $(this).closest(\".list-group-item\").data(\"rno\");\n");
      out.write("			var obj = {rno : rno, id : id};\n");
      out.write("			replyService.like(obj, function(data) {\n");
      out.write("				if(data < 0) { // 좋아요 빼기\n");
      out.write("					$this.removeClass(\"fas text-red\").addClass(\"far\")\n");
      out.write("				} else { // 좋아요 상태 되기\n");
      out.write("					$this.removeClass(\"far\").addClass(\"fas text-red\")\n");
      out.write("				}\n");
      out.write("				$likeCnt = $this.closest(\".list-group-item\").find(\".likeCnt\");\n");
      out.write("				$likeCnt.text(parseInt($likeCnt.text()) + parseInt(data));\n");
      out.write("			})\n");
      out.write("		})\n");
      out.write("	})\n");
      out.write("</script>\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../layout/footer.jsp", out, false);
      out.write('\n');
      out.write('\n');
      out.write('\n');
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
